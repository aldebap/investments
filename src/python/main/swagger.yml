swagger: "2.0"
info:
  description: Investments Application Swagger file
  version: "1.0.0"
  title: Swagger file
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/investment"

# Routes to application APIs
paths:
  /v1/banks:
    get:
      operationId: "service.APIServer.banks"
      tags:
        - "Banks"
      summary: "A list of bank names"
      description: "Get the list of all banks"
      responses:
        200:
          description: "Successful get banks list operation"
          schema:
            type: "array"

  /v1/banks/{bank}/funds:
    get:
      parameters:
        - name: bank
          in: path
          description: Bank name to get fund list
          type: string
          required: True
      operationId: "service.APIServer.funds"
      tags:
        - "Funds"
      summary: "A list of fund names by bank"
      description: "Get the list of all funds of a particular bank"
      responses:
        200:
          description: "Successful get funds list operation"
          schema:
            type: "array"

  /v1/types:
    get:
      operationId: "service.APIServer.types"
      tags:
        - "Types"
      summary: "A list of investment type names"
      description: "Get the list of all types"
      responses:
        200:
          description: "Successful get types list operation"
          schema:
            type: "array"

  /v1/investments:
    post:
      operationId: "service.APIServer.insertNewInvestment"
      parameters:
        - name: investmentData
          in: body
          schema:
            type: object
            properties:
              bank:
                type: string
              type:
                type: string
              name:
                type: string
              operation:
                type: object
                properties:
                  date:
                    type: string
                  amount:
                    type: number
              balance:
                type: object
                properties:
                  date:
                    type: string
                  amount:
                    type: number
      tags:
        - "Investments"
      summary: "Insert a new investment item"
      description: "Insert a new  investment item"
      responses:
        201:
          description: "New investment successfully created"
          schema:
            type: "array"

    get:
      operationId: "service.APIServer.investments"
      parameters:
        - name: startDate
          in: query
          description: The start date to get balance values
          type: string
          required: False
          default: "_"
        - name: endDate
          in: query
          description: The end date to get balance values
          type: string
          required: False
          default: "_"
        - name: active
          in: query
          description: Indicate when to fetch active only investments
          type: boolean
          required: False
          default: True
      tags:
        - "Investments"
      summary: "A list with the investments"
      description: "Get the list of investments"
      responses:
        200:
          description: "Successful get a list of investments"
          schema:
            type: "array"

  /v1/investments/{investmentId}:
    get:
      operationId: "service.APIServer.investmentByID"
      parameters:
        - name: investmentId
          in: path
          description: Investment ID to of the item to be get
          type: string
          required: True
      tags:
        - "Investments"
      summary: "Get a specific investment"
      description: "Get a specific investment"
      responses:
        200:
          description: "Successful get the investment"
          schema:
            type: "array"

    patch:
      operationId: "service.APIServer.patchInvestment"
      parameters:
        - name: investmentId
          in: path
          description: Investment ID to of the item to be patched
          type: string
          required: True
        - name: investmentData
          in: body
          schema:
            type: object
            properties:
              bank:
                type: string
              type:
                type: string
              name:
                type: string
      tags:
        - "Investments"
      summary: "Patch an investment item"
      description: "Patch an investment item"
      responses:
        200:
          description: "Successful patched the investment item"
          schema:
            type: "array"
    delete:
      operationId: "service.APIServer.deleteInvestment"
      parameters:
        - name: investmentId
          in: path
          description: Investment ID to of the item to be deleted
          type: string
          required: True
      tags:
        - "Investments"
      summary: "Delete an investment item"
      description: "Delete an investment item"
      responses:
        204:
          description: "Successfully deleted the investment item"
          schema:
            type: "array"
        404:
          description: "InvestmentId not found"
          schema:
            type: "array"

  /v1/investments/{investmentId}/operations:
    post:
      operationId: "service.APIServer.insertNewOperation"
      parameters:
        - name: investmentId
          in: path
          description: Investment ID to whom the new operation is to be inserted
          type: string
          required: True
        - name: operationData
          in: body
          schema:
            type: object
            properties:
              date:
                type: string
              amount:
                type: number
      tags:
        - "Operations"
      summary: "Insert a new operation item to an investment"
      description: "Insert a new operation item to an investment"
      responses:
        201:
          description: "New operation successfully created"
          schema:
            type: "array"

  /v1/investments/{investmentId}/operations/{operationId}:
    patch:
      operationId: "service.APIServer.patchOperation"
      parameters:
        - name: investmentId
          in: path
          description: Investment ID to the investment whose item to be patched belongs
          type: string
          required: True
        - name: operationId
          in: path
          description: Operation ID to of the item to be patched
          type: string
          required: True
        - name: operationData
          in: body
          schema:
            type: object
            properties:
              date:
                type: string
              amount:
                type: number
      tags:
        - "Operations"
      summary: "Patch an operation item"
      description: "Patch an operation item"
      responses:
        200:
          description: "Successful patched the operation item"
          schema:
            type: "array"
    delete:
      operationId: "service.APIServer.deleteOperation"
      parameters:
        - name: investmentId
          in: path
          description: Investment ID to the investment whose item to be deleted belongs
          type: string
          required: True
        - name: operationId
          in: path
          description: Operation ID to of the item to be deleted
          type: string
          required: True
      tags:
        - "Operations"
      summary: "Delete an operation item"
      description: "Delete an operation item"
      responses:
        204:
          description: "Successfully deleted the operation item"
          schema:
            type: "array"
        404:
          description: "OperationId not found"
          schema:
            type: "array"

  /v1/investments/{investmentId}/revenue:
    post:
      operationId: "service.APIServer.insertNewRevenue"
      parameters:
        - name: investmentId
          in: path
          description: Investment ID to whom the new revenue is to be inserted
          type: string
          required: True
        - name: revenueData
          in: body
          schema:
            type: object
            properties:
              date:
                type: string
              amount:
                type: number
      tags:
        - "Revenue"
      summary: "Insert a new revenue item to an investment"
      description: "Insert a new revenue item to an investment"
      responses:
        201:
          description: "New revenue successfully created"
          schema:
            type: "array"

  /v1/investments/{investmentId}/balance:
    post:
      operationId: "service.APIServer.insertNewBalance"
      parameters:
        - name: investmentId
          in: path
          description: Investment ID to whom the new balance is to be inserted
          type: string
          required: True
        - name: balanceData
          in: body
          schema:
            type: object
            properties:
              date:
                type: string
              amount:
                type: number
      tags:
        - "Balance"
      summary: "Insert a new balance item to an investment"
      description: "Insert a new balance item to an investment"
      responses:
        201:
          description: "New balance successfully created"
          schema:
            type: "array"
